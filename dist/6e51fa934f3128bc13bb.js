import"./index.css";import*as THREE from"three";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";import{GLTFLoader}from"three/examples/jsm/loaders/GLTFLoader.js";import{DRACOLoader}from"three/examples/jsm/loaders/DRACOLoader.js";import firefliesVertexShader from"./shaders/fireflies/vertex.js";import firefliesFragmentShader from"./shaders/fireflies/fragment.js";import alcoolVertexShader from"./shaders/alcool/vertex.js";import alcoolFragmentShader from"./shaders/alcool/fragment.js";const canvas=document.getElementsByClassName("webgl")[0];if(canvas){const e=new THREE.Scene,a=new THREE.TextureLoader,t=new DRACOLoader;t.setDecoderPath("draco/");const i=new GLTFLoader;i.setDRACOLoader(t);const r=a.load("texture_cocktail.jpg");r.flipY=!1;const o=new THREE.MeshBasicMaterial({map:r});r.encoding=THREE.sRGBEncoding;const n=new THREE.PlaneGeometry(50,50,52,212),l=new THREE.ShaderMaterial({vertexShader:alcoolVertexShader(),fragmentShader:alcoolFragmentShader(),uniforms:{uTime:{value:0},uBigWavesElevation:{value:.277},uBigWavesFrequency:{value:new THREE.Vector2(0,.183)},uBigWavesSpeed:{value:.826},uSmallWavesElevation:{value:.135},uSmallWavesFrequency:{value:2.96},uSmallWavesSpeed:{value:.83},uSmallIterations:{value:3},uDepthColor:{value:new THREE.Color("#009bdc")},uSurfaceColor:{value:new THREE.Color("#5cb9f7")},uColorOffset:{value:.08},uColorMultiplier:{value:5}}}),s=new THREE.Mesh(n,l);s.rotation.x=.5*-Math.PI,s.position.y=-.5,e.add(s),i.load("cocktail_scene_allin.glb",(a=>{e.add(a.scene),a.scene.children.find((e=>"Plane005"===e.name)).material=o}));const d=new THREE.BufferGeometry,m=30,c=new Float32Array(3*m),h=new Float32Array(m);for(let e=0;e<m;e++)c[3*e+0]=4*(Math.random()-.5),c[3*e+1]=4*Math.random(),c[3*e+2]=4*(Math.random()-.5),h[e]=Math.random();d.setAttribute("position",new THREE.BufferAttribute(c,3)),d.setAttribute("aScale",new THREE.BufferAttribute(h,1));const u=new THREE.ShaderMaterial({uniforms:{uPixelRatio:{value:Math.min(window.devicePixelRatio,2)},uSize:{value:100},uTime:{value:0}},vertexShader:firefliesVertexShader(),fragmentShader:firefliesFragmentShader(),transparent:!0,blending:THREE.AdditiveBlending,depthWrite:!1}),E=new THREE.Points(d,u);e.add(E);const w={width:window.innerWidth-100,height:window.innerHeight/2};window.addEventListener("resize",(()=>{w.width=window.innerWidth-100,w.height=window.innerHeight/2,f.aspect=w.width/w.height,f.updateProjectionMatrix(),R.setSize(w.width,w.height),R.setPixelRatio(Math.min(window.devicePixelRatio,2)),u.uniforms.uPixelRatio.value=Math.min(window.devicePixelRatio,2)}));const f=new THREE.PerspectiveCamera(25,w.width/w.height,.1,30);f.position.x=0,f.position.y=5,f.position.z=18,e.add(f);const v=new OrbitControls(f,canvas);v.enableDamping=!0;const R=new THREE.WebGLRenderer({canvas,antialias:!0});R.setSize(w.width,w.height),R.setPixelRatio(Math.min(window.devicePixelRatio,2)),R.outputEncoding=THREE.sRGBEncoding,R.setClearColor("#74c8f7");const p=new THREE.Clock,g=()=>{const a=p.getElapsedTime();u.uniforms.uTime.value=a,l.uniforms.uTime.value=a,v.update(),R.render(e,f),window.requestAnimationFrame(g)};g()}console.log("hey");